rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isCreator(quizData) {
      return request.auth.uid == quizData.createdBy;
    }
    
    function isAdmin() {
      // Check if user has admin role in users collection
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isPublished(quizData) {
      return quizData.isPublished == true;
    }
    
    // Quiz rules with enhanced permissions
    match /quizzes/{quizId} {
      // Allow read if:
      // - User is authenticated AND
      // - Quiz is published OR user is creator OR user is admin
      allow read: if isAuthenticated() && (
        isPublished(resource.data) || 
        isCreator(resource.data) || 
        isAdmin()
      );
      
      // Allow create if user is authenticated
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.createdBy;
      
      // Allow update if:
      // - User is authenticated AND
      // - User is creator OR user is admin
      allow update: if isAuthenticated() && (
        isCreator(resource.data) || 
        isAdmin()
      );
      
      // Allow delete if:
      // - User is authenticated AND
      // - User is creator OR user is admin
      allow delete: if isAuthenticated() && (
        isCreator(resource.data) || 
        isAdmin()
      );
      
      // Allow list if user is authenticated
      allow list: if isAuthenticated();
    }
    
    // Quiz results rules
    match /quizResults/{resultId} {
      // Allow read if:
      // - User is authenticated AND
      // - User owns the result OR user is admin OR user is quiz creator
      allow read: if isAuthenticated() && (
        isOwner(resource.data.userId) || 
        isAdmin() ||
        isCreator(get(/databases/$(database)/documents/quizzes/$(resource.data.quizId)).data)
      );
      
      // Allow create if user is authenticated and owns the result
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.userId;
      
      // Allow update if user owns the result
      allow update: if isAuthenticated() && 
        isOwner(resource.data.userId);
      
      // Allow delete if:
      // - User owns the result OR
      // - User is admin OR
      // - User is quiz creator
      allow delete: if isAuthenticated() && (
        isOwner(resource.data.userId) || 
        isAdmin() ||
        isCreator(get(/databases/$(database)/documents/quizzes/$(resource.data.quizId)).data)
      );
      
      // Allow list if user is authenticated
      allow list: if isAuthenticated();
    }
    
    // Users collection for role management
    match /users/{userId} {
      // Allow read if user owns the document or is admin
      allow read: if isAuthenticated() && (
        isOwner(userId) || 
        isAdmin()
      );
      
      // Allow create if user is creating their own document
      allow create: if isAuthenticated() && 
        isOwner(userId);
      
      // Allow update if user owns the document or is admin
      allow update: if isAuthenticated() && (
        isOwner(userId) || 
        isAdmin()
      );
      
      // Allow delete if user is admin
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Analytics collection for quiz performance data
    match /analytics/{analyticsId} {
      // Allow read if user is admin or quiz creator
      allow read: if isAuthenticated() && (
        isAdmin() ||
        isCreator(get(/databases/$(database)/documents/quizzes/$(resource.data.quizId)).data)
      );
      
      // Allow create if user is authenticated
      allow create: if isAuthenticated();
      
      // Allow update/delete if user is admin
      allow update, delete: if isAuthenticated() && isAdmin();
    }
  }
}
